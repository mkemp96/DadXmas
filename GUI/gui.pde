/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void NewDriver(GButton source, GEvent event) { //_CODE_:NewDriverButton:553114:
  println("NewDriverButton - GButton >> GEvent." + event + " @ " + millis());
  

 buildNewDriver();
  
} //_CODE_:NewDriverButton:553114:

public void Clear_Driver_Details(GButton source, GEvent event) { //_CODE_:ClearStored:838484:
  println("ClearStored - GButton >> GEvent." + event + " @ " + millis());
  
  clearNewDriver();
} //_CODE_:ClearStored:838484:

public void test_Button(GButton source, GEvent event) { //_CODE_:TestButton:285484:
  println("TestButton - GButton >> GEvent." + event + " @ " + millis());
  if(driverPresent && primed){
    
    
  RecordTime();
  //clearNewDriver();
  
  }
} //_CODE_:TestButton:285484:

public void ConnectionTest(GButton source, GEvent event) { //_CODE_:WifiTest:501240:
  println("WifiTest - GButton >> GEvent." + event + " @ " + millis());
  
  pingPi();
} //_CODE_:WifiTest:501240:

public void PrimeButton(GButton source, GEvent event) { //_CODE_:Prime:708605:
  println("Prime - GButton >> GEvent." + event + " @ " + millis());
  
  if(!Activated){
    //shouldn't change unless rpi is responding
    Activated = true;
    Prime.setText("De-activate");
    Prime.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  }
  else{
   Activated = false;
   Prime.setText("Activate");
   Prime.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  
  }
} //_CODE_:Prime:708605:

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:880829:
  appc.background(230);
} //_CODE_:window1:880829:

public void NameInput_Change(GTextField source, GEvent event) { //_CODE_:NameInput:532376:
  println("NameInput - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:NameInput:532376:

public void textfield5_change1(GTextField source, GEvent event) { //_CODE_:CarInput:460638:
  println("CarInput - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:CarInput:460638:

public void textfield5_change2(GTextField source, GEvent event) { //_CODE_:LapInput:727199:
  println("LapNumber - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:LapInput:727199:

public void Add_Driver_Details(GButton source, GEvent event) { //_CODE_:Add_Driver:561978:
  println("Add_Driver - GButton >> GEvent." + event + " @ " + millis());
  
  print(saveName1);
    newDriver(NameInput.getText(), CarInput.getText(), LapInput.getText());
  window1.close();
  
} //_CODE_:Add_Driver:561978:

public void Cancel_Driver_Details(GButton source, GEvent event) { //_CODE_:Cancel:977170:
  println("Cancel - GButton >> GEvent." + event + " @ " + millis());
  
  window1.close();

} //_CODE_:Cancel:977170:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  NewDriverButton = new GButton(this, 35, 31, 150, 30);
  NewDriverButton.setText("Add Driver");
  NewDriverButton.addEventHandler(this, "NewDriver");
  StoredName = new GLabel(this, 40, 102, 80, 20);
  StoredName.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  StoredName.setText("Name");
  StoredName.setTextBold();
  StoredName.setOpaque(true);
  StoredCar = new GLabel(this, 131, 102, 80, 20);
  StoredCar.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  StoredCar.setText("Car");
  StoredCar.setTextBold();
  StoredCar.setOpaque(true);
  StoredLap = new GLabel(this, 222, 102, 80, 20);
  StoredLap.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  StoredLap.setText("Lap No.");
  StoredLap.setTextBold();
  StoredLap.setOpaque(true);
  StoredTime = new GLabel(this, 312, 101, 80, 20);
  StoredTime.setText("Time...");
  StoredTime.setTextItalic();
  StoredTime.setOpaque(true);
  ClearStored = new GButton(this, 399, 102, 41, 19);
  ClearStored.setText("Clear");
  ClearStored.setLocalColorScheme(GCScheme.RED_SCHEME);
  ClearStored.addEventHandler(this, "Clear_Driver_Details");
  TestButton = new GButton(this, 317, 31, 80, 30);
  TestButton.setText("Test");
  TestButton.setTextBold();
  TestButton.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  TestButton.addEventHandler(this, "test_Button");
  WifiTest = new GButton(this, 154, 184, 80, 30);
  WifiTest.setText("Test RPi");
  WifiTest.setTextBold();
  WifiTest.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  WifiTest.addEventHandler(this, "ConnectionTest");
  Prime = new GButton(this, 438, 30, 80, 30);
  Prime.setText("Activate");
  Prime.setTextBold();
  Prime.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  Prime.addEventHandler(this, "PrimeButton");
  LastDriver = new GLabel(this, 42, 137, 80, 20);
  LastDriver.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  LastDriver.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  LastDriver.setOpaque(true);
  LastCar = new GLabel(this, 132, 137, 80, 20);
  LastCar.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  LastCar.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  LastCar.setOpaque(true);
  LastLap = new GLabel(this, 223, 136, 80, 20);
  LastLap.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  LastLap.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  LastLap.setOpaque(true);
  LastTime = new GLabel(this, 312, 136, 80, 20);
  LastTime.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  LastTime.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  LastTime.setOpaque(true);
  window1 = GWindow.getWindow(this, "Window title", 500, 500, 400, 150, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.CLOSE_WINDOW);
  window1.addDrawHandler(this, "win_draw1");
  DialogueTitle = new GLabel(window1, 117, 16, 150, 50);
  DialogueTitle.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  DialogueTitle.setText("Enter Driver Details");
  DialogueTitle.setTextBold();
  DialogueTitle.setOpaque(false);
  NameInput = new GTextField(window1, 13, 78, 81, 30, G4P.SCROLLBARS_NONE);
  NameInput.setPromptText("Enter Name");
  NameInput.setOpaque(true);
  NameInput.addEventHandler(this, "NameInput_Change");
  CarInput = new GTextField(window1, 101, 77, 85, 30, G4P.SCROLLBARS_NONE);
  CarInput.setPromptText("Enter Car");
  CarInput.setOpaque(true);
  CarInput.addEventHandler(this, "textfield5_change1");
  LapInput = new GTextField(window1, 196, 77, 85, 30, G4P.SCROLLBARS_NONE);
  LapInput.setPromptText("Enter Lap No.");
  LapInput.setOpaque(true);
  LapInput.addEventHandler(this, "textfield5_change2");
  Add_Driver = new GButton(window1, 300, 77, 80, 30);
  Add_Driver.setText("Add Driver");
  Add_Driver.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  Add_Driver.addEventHandler(this, "Add_Driver_Details");
  Cancel = new GButton(window1, 301, 115, 69, 26);
  Cancel.setText("Cancel");
  Cancel.setLocalColorScheme(GCScheme.RED_SCHEME);
  Cancel.addEventHandler(this, "Cancel_Driver_Details");
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GButton NewDriverButton; 
GLabel StoredName; 
GLabel StoredCar; 
GLabel StoredLap; 
GLabel StoredTime; 
GButton ClearStored; 
GButton TestButton; 
GButton WifiTest; 
GButton Prime; 
GLabel LastDriver; 
GLabel LastCar; 
GLabel LastLap; 
GLabel LastTime; 
GWindow window1;
GLabel DialogueTitle; 
GTextField NameInput; 
GTextField CarInput; 
GTextField LapInput; 
GButton Add_Driver; 
GButton Cancel; 
